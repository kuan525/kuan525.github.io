{"name":"GeeCache","slug":"GeeCache","count":4,"postlist":[{"title":"HTTP服务端","uid":"6cfdbde6709cc79c68a7fde666e7baae","slug":"HTTP服务端","date":"2022-12-09T16:42:52.000Z","updated":"2022-12-09T16:43:38.613Z","comments":true,"path":"api/articles/HTTP服务端.json","keywords":"kuan525","cover":null,"text":" 使用GO语言标准库http搭建HTTP Serverhttp标准库 go语言提供了http标准库，可以非常方便的搭建HTTP服务端和客户端，以下我们无论收到什么请求，都返回字符串“Hello, World” package main import ( &quot;log&quo...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"GeeCache","slug":"GeeCache","count":4,"path":"api/tags/GeeCache.json"}],"author":{"name":"kuan525","slug":"blog-author","avatar":"https://s3.uuu.ovh/imgs/2022/12/01/7e58bc65f0f1b81a.jpg","link":"/","description":"24ng @weixin:kuan_525","socials":{"github":"https://github.com/kuan525","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xiao-sheng-xiao-meng-1","csdn":"https://blog.csdn.net/m0_53025874","juejin":"https://juejin.cn/user/638157299124168","customs":{}}},"feature":true},{"title":"LRU缓存淘汰策略","uid":"7d0e5e959c72a1d339ce2b2021e95c4f","slug":"LRU缓存淘汰策略","date":"2022-12-06T13:36:23.000Z","updated":"2022-12-06T13:36:49.027Z","comments":true,"path":"api/articles/LRU缓存淘汰策略.json","keywords":"kuan525","cover":null,"text":" 三种常用的淘汰（失效）算法：FIFO、LFU、LRU 实现LRU缓存淘汰算法FOFO（First In First Out） 先进先出，记录缓存中最老的记录，当空间不足的时候，放弃最老的这个即可，通常用一个队列实现。但是在很多地方，部分记录虽然是最早添加但也最经常访问，而不得不...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"GeeCache","slug":"GeeCache","count":4,"path":"api/tags/GeeCache.json"}],"author":{"name":"kuan525","slug":"blog-author","avatar":"https://s3.uuu.ovh/imgs/2022/12/01/7e58bc65f0f1b81a.jpg","link":"/","description":"24ng @weixin:kuan_525","socials":{"github":"https://github.com/kuan525","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xiao-sheng-xiao-meng-1","csdn":"https://blog.csdn.net/m0_53025874","juejin":"https://juejin.cn/user/638157299124168","customs":{}}}},{"title":"一致性哈希","uid":"9bcc4dbf5fd0afda677727e925c7a91f","slug":"一致性哈希","date":"2022-12-10T03:42:33.000Z","updated":"2022-12-10T03:43:04.430Z","comments":true,"path":"api/articles/一致性哈希.json","keywords":"kuan525","cover":null,"text":" 一致性哈希的原理以及为什么要使用一致性哈希 实现一致性哈希为什么使用一致性哈希 对于分布式缓存来说，当一个节点接收到请求，如果该节点并没有存储缓存值，那么它面临的难题时，从谁那里获取源数据。假设第一次随机选择了节点1，节点1从数据源获取到数据的同时缓存该数据，那第二次只有1/1...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"GeeCache","slug":"GeeCache","count":4,"path":"api/tags/GeeCache.json"}],"author":{"name":"kuan525","slug":"blog-author","avatar":"https://s3.uuu.ovh/imgs/2022/12/01/7e58bc65f0f1b81a.jpg","link":"/","description":"24ng @weixin:kuan_525","socials":{"github":"https://github.com/kuan525","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xiao-sheng-xiao-meng-1","csdn":"https://blog.csdn.net/m0_53025874","juejin":"https://juejin.cn/user/638157299124168","customs":{}}},"feature":true},{"title":"单机并发缓存","uid":"cdfcbf875732425e5f8b3e1e1d3fdd75","slug":"单机并发缓存","date":"2022-12-09T14:40:58.000Z","updated":"2022-12-09T14:41:55.865Z","comments":true,"path":"api/articles/单机并发缓存.json","keywords":"kuan525","cover":null,"text":" 介绍sync.Mutex互斥锁的使用，并实现LRU缓存的并发控制 实现GeeCache核心数据结构Group，缓存不存在时，调用回调函数 sync.Mutex sync.Mutex是一个互斥锁，可以由不同的协程加锁和解锁 支持并发读写 其实就是在操作共享空间的时候，加一把锁 g...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"GeeCache","slug":"GeeCache","count":4,"path":"api/tags/GeeCache.json"}],"author":{"name":"kuan525","slug":"blog-author","avatar":"https://s3.uuu.ovh/imgs/2022/12/01/7e58bc65f0f1b81a.jpg","link":"/","description":"24ng @weixin:kuan_525","socials":{"github":"https://github.com/kuan525","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/xiao-sheng-xiao-meng-1","csdn":"https://blog.csdn.net/m0_53025874","juejin":"https://juejin.cn/user/638157299124168","customs":{}}},"feature":true}]}